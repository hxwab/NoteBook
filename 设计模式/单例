http://www.cnblogs.com/BoyXiao/archive/2010/05/07/1729376.html?login=1


class Singleton2{
 
 private static Singleton2 instance =null;
 
 static{
  instance = new Singleton2();
 }
 private Singleton2() {
  // TODO Auto-generated constructor stub
 }
 
 public static Singleton2 getInstance(){
 
  return instance;
 }
}


public class Singleton {
 
 private static ReentrantLock lock =  new ReentrantLock();
 private static Singleton instance=null;
 private static Object ojb = new Object();
 
 
 private Singleton() {
  // TODO Auto-generated constructor stub
 }
 
 //每次调用都上锁
 public static Singleton getInstance(){
 
  lock.lock();
  try{
   if(instance==null){
    instance = new Singleton();
   }
  }finally{
   lock.unlock();
  }
  return instance;
 }
 
 
 //上锁耗时，先判断们对于instance 为null的上锁
 public static Singleton getInstance1(){
 
  if(instance==null){
   
   synchronized (ojb) {
    if(instance==null){
     instance = new Singleton();
    }
   }
  }
  return instance;
 }
 

}


synchronized 和 ReentrantLock的区别

http://blog.csdn.net/fw0124/article/details/6672522



